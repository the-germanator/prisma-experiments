generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Person {
  PersonID  Int    @id @default(autoincrement())
  LastName  String
  FirstName String
  Age       Int
  Zip       Int @default(12345)
  Cars      Car[]
  // Ths above looks wrong, since it's a 1-M relationship and the "Person" table will not have any
  // new fields added. This type system opted to represent the relationship in a more literal way.
  // Reading this, you can literally say "A Person can have multiple cars"
}

model Car {
  CarID   Int   @id @default(autoincrement())
  Make    String
  Model   String
  Year    String
  Vin     String
  Owner   Person @relation(fields: [PersonID], references: [PersonID])
  PersonID Int
  // Here the syntax is again somewhat strange. When looking at the end result of this (in SQL),
  // only "ownerid" becomes a new field. "owner" exists to represent the relationship.
  // "references" represents fields in the related table representing its primary key
  // (can be multiple in a composite key, hence the plural). The corresponding "fields" array
  // contains the new fields generated by the relationship. This should generally be 1:1.
}